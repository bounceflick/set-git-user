#!/bin/bash

set -e

# Check dependencies
(which -s json && test 'https://github.com/trentm/json' = "`json --version | tail -1`") || {
  echo "jsontool required: npm install -g jsontool"
  exit 1
}

# Enforce the credential cacher - this means that credentials used after a fetch/push will be
# cached for 4hrs
git config --global credential.helper 'cache --timeout=14400'
# Flush any existing cached credentials
git credential-cache exit

# No args given
test $1 || {
  echo "\
Set git username(s):
  iam   github-username
  weare github-username github-username
Sign out:
  iam   out
  weare out"
  current_user_name=`git config --global user.name`
  current_user_email=`git config --global user.email`

  echo
  echo "\
For this to work you must have filled out the name and email fields in:
https://github.com/settings/profile"

  test "$current_user_name" && echo && echo "\
Current name:  $current_user_name"
  test "$current_user_name" && echo "\
Current email: $current_user_email"
  exit
}

function git_config_clear_dbc_students {
  git config --global --remove-section dbc 2>/dev/null || true
}

function git_config_add_dbc_students {
  git_config_clear_dbc_students
  while [ $# -gt 0 ]
  do
    git config --global --add dbc.student "$1"
    shift
  done
}

test 'out' = $1 && {
  git config --global --remove-section user
  git_config_clear_dbc_students
  exit
}

function user_json {
  local username=$1
  local json=`curl -s https://api.github.com/users/$username`
  test "Not Found" = "`echo $json | json message`" && {
    echo "Couldn't find $username on GitHub" >&2
    exit 1
  }
  echo $json
}

# One arg given
! test $2 && {
  user_json=`user_json $1`
  git config --global user.name  "`echo $user_json | json name`"
  git config --global user.email "`echo $user_json | json email`"
  git_config_add_dbc_students $1
  exit
}

# More than one arg given
{
  user1=$1
  user2=$2
  test $3 && test 'and' = $user2 && user2=$3

  sorted_usernames=(`echo -e "$user1\n$user2" | sort`)
  username1=${sorted_usernames[0]}
  username2=${sorted_usernames[1]}
  user1_json=`user_json $username1`
  user2_json=`user_json $username2`
  names="`echo $user1_json | json name` & `echo $user2_json | json name`"
  email="pair+$username1.$username2@devbootcamp.com"
  git config --global user.name  "$names"
  git config --global user.email "$email"

  git_config_add_dbc_students $user1 $user2
}
